2006-03-28  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_class_init),
	(gnl_composition_reset), (gnl_composition_event_handler),
	(gnl_composition_ghost_pad_set_target), (get_clean_toplevel_stack),
	(no_more_pads_object_cb), (update_pipeline):
	Add pad template.
	More debug.
	* gnl/gnlfilesource.c: (decodebin_pad_removed_cb),
	(gnl_filesource_init):
	Add pad template
	Reset the ghostpad if the decodebin pad gets removed.
	* gnl/gnlobject.c: (gnl_object_class_init),
	(gnl_object_cleanup_func), (gnl_object_cleanup),
	(gnl_object_change_state):
	Call GnlObject::prepare AFTER calling parent change_state, otherwise
	pads won't have been re-activated, flushing flash won't have been
	removed and seek on the pads will definitely not work.
	Essential for re-using gnlobjects.
	* gnl/gnlobject.h:
	* gnl/gnlsource.c: (gnl_source_class_init):
	Add pad template

2006-03-24  Wim Taymans  <wim@fluendo.com>

	* gnl/gnlobject.c: (gnl_object_class_init), (gnl_object_init),
	(gnl_object_to_media_time), (gnl_media_to_object_time),
	(gnl_object_covers_func), (gnl_object_covers),
	(gnl_object_prepare_func), (gnl_object_prepare),
	(gnl_object_release_pad), (translate_incoming_seek),
	(translate_outgoing_seek), (translate_outgoing_new_segment),
	(internalpad_event_function), (translate_incoming_position_query),
	(internalpad_query_function), (internalpad_unlink_function),
	(flush_hack_check), (ghostpad_event_function),
	(ghostpad_query_function), (control_internal_pad),
	(ghostpad_link_function), (ghostpad_unlink_function),
	(gnl_object_ghost_pad_full), (gnl_object_ghost_pad),
	(gnl_object_ghost_pad_no_target),
	(gnl_object_ghost_pad_set_target),
	(translate_message_segment_start),
	(translate_message_segment_done), (gnl_object_handle_message),
	(gnl_object_set_caps), (update_values), (gnl_object_set_property),
	(gnl_object_get_property), (gnl_object_change_state):
	* gnl/gnlobject.h:
	Re-indent, move uncommon code out of the main flow.

	* gnl/gnlsource.c: (gnl_source_init), (gnl_source_dispose),
	(gnl_source_finalize), (no_more_pads_in_child),
	(gnl_source_add_element), (gnl_source_remove_element):
	* gnl/gnlsource.h:
	cleanups.

2006-02-20  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_handle_message),
	(get_new_seek_event), (get_stack_list), (get_clean_toplevel_stack),
	(update_pipeline):
	Fix proper pipeline update when going from one segment to another (as
	opposed to seek changes).
	More efficient _update_pipeline()
	Lots of debug cleanups.
	* gnl/gnlobject.c: (translate_incoming_position_query),
	(ghostpad_query_function), (translate_message_segment_done):
	Implement position query time-shifting.

2006-01-27  Edward Hervey  <edward@fluendo.com>

	* configure.ac: 
	Added requirement for explicit --prefix setting, so that GNonLin
	doesn't get installed in a path that isn't checked by the GStreamer
	registry.

2006-01-18  Edward Hervey  <edward@fluendo.com>

	0.10.0.5 release "Doner con patatas"

	* RELEASE:
	* configure.ac:

2006-01-07  Edward Hervey  <edward@fluendo.com>

	* configure.ac:
	Remove useless checks
	* gnl/Makefile.am:
	* gnl/gnl.c:
	* gnl/gnl.h:
	* gnl/gnltimeline.c:
	* gnl/gnltimeline.h:
	Remove gnltimeline.[ch]

2006-01-07  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_handle_message):
	I got mix up with >= vs > and <= vs <
	* gnl/gnlobject.c: (translate_message_segment_done):
	Handle the case where media_stop is GST_CLOCK_TIME_NONE

2006-01-06  Edward Hervey  <edward@fluendo.com>

	Releasing 0.10.0.4 beta release
	
	* configure.ac:
	Remove useless checks
	* gnl/Makefile.am:
	* gnl/gnl.c:
	* gnl/gnl.h:
	* gnl/gnltimeline.c:
	* gnl/gnltimeline.h:
	Remove gnltimeline.[ch]

2005-12-23  Edward Hervey  <edward@fluendo.com>

	* Makefile.am:
	* configure.ac:
	* pkgconfig/Makefile.am:
	* pkgconfig/gnonlin.pc.in:
	Add gnonlin.pc for programs depending on gnonlin.

2005-12-21  Edward Hervey  <edward@fluendo.com>

	* configure.ac:
	Back to devel cycle

2005-12-21  Edward Hervey  <edward@fluendo.com>

	Releasing 0.10.0.2 beta release
	
	* RELEASE:
	* configure.ac:

2005-12-21  Edward Hervey  <edward@fluendo.com>

	* configure.ac:
	Ignore po/ for the time being
	* gnl/Makefile.am:
	Add gnltypes.h to the list of headers
	Simplify the whole process
	* gnl/gnl.c:
	* gnl/gnl.h:
	* gnl/gnlcomposition.h:
	* gnl/gnlfilesource.h:
	* gnl/gnlobject.h:
	* gnl/gnloperation.h:
	* gnl/gnlsource.h:
	Use local include headers (<gnl/*.h> ==> "*.h")

2005-12-20  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlfilesource.c:
	Cleanup
	* gnl/gnlobject.c: (translate_message_segment_done):
	Handle cases where the GST_SEGMENT_DONE has a format different from
	GST_FORMAT_TIME. In those situations, bump the segment-done value to
	object->media_start.

2005-12-20  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_class_init),
	(gnl_composition_init), (gnl_composition_handle_message),
	(objects_stop_compare):
	Update to use GstBin::handle_message virtual method.
	Fix **stupid** bug in stop_compare GCompareFunc.
	* gnl/gnlobject.c: (gnl_object_class_init), (gnl_object_init),
	(gnl_object_handle_message):
	* gnl/gnlobject.h:
	Update to use GstBin::handle_message virtual method

2005-12-14  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (objects_start_compare),
	(objects_stop_compare):
	Returning the difference of 2 unsigned int, expecting the result
	to be negative is... somewhat idiotic :)

	* gnl/gnlcomposition.c: (gnl_composition_class_init),
	(gnl_composition_add_object):
	* gnl/gnlfilesource.c: (gnl_filesource_class_init):
	* gnl/gnlobject.c: (gnl_object_class_init),
	(gnl_object_covers_func), (translate_message_segment_start),
	(translate_message_segment_done), (update_values):
	* gnl/gnloperation.c: (gnl_operation_class_init):
	* gnl/gnlsource.c: (gnl_source_class_init):
	GNonLin debugging category is now BOLD BLUE.
	Updated debugging statements with GST_TIME_FORMAT.

2005-12-12  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (compare_relink_stack):
	Whoops, don't unref too much.

2005-12-10  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_init),
	(gnl_composition_reset), (gnl_composition_sync_handler),
	(have_to_update_pipeline), (get_new_seek_event),
	(handle_seek_event), (gnl_composition_event_handler),
	(gnl_composition_ghost_pad_set_target), (objects_start_compare),
	(objects_stop_compare), (no_more_pads_object_cb),
	(compare_relink_stack), (update_pipeline),
	(gnl_composition_add_object):
	Implement better event handling and fix memory leaks.
	* gnl/gnlfilesource.c: (gnl_filesource_prepare):
	* gnl/gnlobject.c: (gnl_object_to_media_time),
	(gnl_media_to_object_time), (translate_incoming_seek),
	(translate_outgoing_seek), (translate_outgoing_new_segment),
	(internalpad_event_function), (internalpad_query_function),
	(internalpad_unlink_function), (ghostpad_event_function),
	(control_internal_pad), (ghostpad_unlink_function),
	(gnl_object_ghost_pad_set_target):
	Implement better event handling

2005-12-08  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlfilesource.c: (pad_blocked_cb):
	Do this hack from another thread.

2005-12-02  Edward Hervey  <edward@fluendo.com>

	* configure.ac:
	Preparation for oh ten oh

2005-12-01  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_sync_handler),
	(objects_start_compare), (objects_stop_compare),
	(update_start_stop_duration), (update_pipeline),
	(object_start_changed), (object_stop_changed),
	(gnl_composition_add_object):
	Wow, that was some stupid error :)
	* gnl/gnlobject.c: (translate_incoming_seek),
	(internalpad_event_function), (flush_hack_check),
	(ghostpad_event_function), (control_internal_pad),
	(gnl_object_ghost_pad_full), (gnl_object_ghost_pad_no_target):
	Better flush handling.

2005-11-26  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_put_sync_handler),
	(gnl_composition_ghost_pad_set_target):
	* gnl/gnlobject.c: (gnl_object_put_sync_handler),
	(translate_outgoing_new_segment), (internalpad_event_function),
	(gnl_object_ghost_pad_full), (gnl_object_ghost_pad_no_target):
	* gnl/gnlobject.h:
	Update for latest API changes

2005-11-18  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlfilesource.c: (gnl_filesource_class_init),
	(pad_blocked_cb), (gnl_filesource_prepare):
	Better behaviour as standalone element
	* gnl/gnlobject.c: (translate_incoming_seek):
	Added debug

2005-11-04  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_sync_handler),
	(get_stack_list), (send_initial_seek),
	(gnl_composition_change_state), (compare_relink_stack),
	(update_pipeline), (object_start_changed), (object_stop_changed),
	(object_priority_changed), (object_active_changed),
	(gnl_composition_add_object), (gnl_composition_remove_object):
	Fixed problem in stack traversal
	Better State-Lock handling of elements
	
	* gnl/gnlfilesource.c: (ghost_seek_pad):
	* gnl/gnlobject.c: (gnl_object_init), (internalpad_event_function),
	(flush_hack_check), (ghostpad_event_function),
	(control_internal_pad), (gnl_object_ghost_pad_full),
	(gnl_object_ghost_pad):
	* gnl/gnlobject.h:
	Added fields for segment seeking at the base GnlObject class level
	Added hack for a flushing seek issue, we get deadlocks otherwise

2005-11-03  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_put_sync_handler),
	(gnl_composition_init), (gnl_composition_dispose),
	(gnl_composition_sync_handler),
	(gnl_composition_ghost_pad_set_target), (get_stack_list),
	(update_start_stop_duration), (compare_relink_stack):
	Override bin sync-bus, first step to rebuilding pipeline after
	segment-done
	
	* gnl/gnlfilesource.c: (ghost_seek_pad), (pad_blocked_cb),
	(decodebin_new_pad_cb), (gnl_filesource_init):
	Use 'new-pad' signal from decodebin instead of 'no-more-pads'

	* gnl/gnlobject.c: (gnl_object_put_sync_handler),
	(gnl_object_init), (translate_incoming_seek),
	(translate_outgoing_newsegment), (translate_message_segment_start),
	(translate_message_segment_done), (gnl_object_sync_handler),
	(update_values):
	* gnl/gnlobject.h:
	Added sync bus override, with functions to time-shift segment-start
	and segment-done messages

2005-11-02  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_init),
	(gnl_composition_finalize), (gnl_composition_reset),
	(gnl_composition_ghost_pad_set_target),
	(gnl_composition_find_object_full), (send_initial_seek),
	(gnl_composition_change_state), (no_more_pads_object_cb),
	(compare_relink_stack), (update_pipeline),
	(gnl_composition_add_object), (gnl_composition_remove_object):
	* gnl/gnlfilesource.c: (gnl_filesource_class_init),
	(ghost_seek_pad), (pad_blocked_cb), (decodebin_no_more_pads_cb),
	(gnl_filesource_init), (gnl_filesource_send_event):
	* gnl/gnlobject.c: (internalpad_event_function),
	(internalpad_query_function), (ghostpad_event_function),
	(ghostpad_query_function), (ghostpad_link_function):
	* gnl/gnlsource.c: (no_more_pads_in_child),
	(gnl_source_add_element):
	Second part of using dynamic pads. Solves deadlocks.
	Most of the work is down in sources.
	
2005-11-02  Edward Hervey  <edward@fluendo.com>

	* configure.ac:
	up to 0.9.4.1
	* gnl/gnl.c:
	gnonlin and not GNonLin for plugin name
	* gnl/gnlcomposition.c: (hash_value_destroy),
	(gnl_composition_init), (gnl_composition_finalize),
	(gnl_composition_find_object_full), (update_pipeline),
	(gnl_composition_add_object), (gnl_composition_remove_object):
	Use a GMutex instead of a GStaticMutex
	First step to using dynamic pads : don't add ghostpad at startup
	* gnl/gnlfilesource.c: (gnl_filesource_class_init):
	beautification

2005-10-31  Edward Hervey  <edward@fluendo.com>

	* gnl/Makefile.am:
	* gnl/gnl.c:
	* gnl/gnl.h:
	* gnl/gnltypes.h:
	* gnl/gnlfilesource.c: (gnl_filesource_base_init),
	(gnl_filesource_class_init), (compare_src_pad),
	(get_valid_src_pad), (decodebin_no_more_pads_cb),
	(gnl_filesource_init), (gnl_filesource_dispose),
	(gnl_filesource_finalize), (gnl_filesource_set_property),
	(gnl_filesource_get_property):
	* gnl/gnlfilesource.h:
	Added GnlFileSource, a higher-level decodebin-based source

	* gnl/gnlcomposition.c: (gnl_composition_class_init),
	(gnl_composition_init), (gnl_composition_dispose),
	(gnl_composition_reset), (gnl_composition_bus_watch),
	(priority_comp), (get_stack_list), (get_clean_toplevel_stack),
	(gnl_composition_find_object_full), (gnl_composition_find_object),
	(get_src_pad), (gnl_composition_prepare),
	(gnl_composition_change_state), (compare_relink_stack),
	(update_pipeline), (object_start_changed), (object_stop_changed),
	(object_priority_changed), (object_active_changed),
	(gnl_composition_add_object), (gnl_composition_remove_object):
	* gnl/gnlcomposition.h:
	Added the supa-doopa traversal-with-stack functionnality for figuring out
	quickly what should be played at any given moment. Why didn't I come up
	with this before ??
	Removed deprecated pieces of code
	
	* gnl/gnlobject.c: (gnl_object_class_init),
	(gnl_object_to_media_time), (gnl_media_to_object_time),
	(gnl_object_covers), (gnl_object_prepare_func),
	(translate_incoming_seek), (translate_outgoing_seek),
	(control_internal_pad), (ghostpad_link_function),
	(ghostpad_unlink_function), (gnl_object_ghost_pad),
	(gnl_object_ghost_pad_notarget), (gnl_object_ghost_pad_set_target),
	(update_values), (gnl_object_change_state):
	* gnl/gnlobject.h:
	Fixes to the GhostPad system
	Indentation beautification
	
	* gnl/gnlsource.c: (gnl_source_class_init),
	(no_more_pads_in_child), (gnl_source_remove_element):
	* gnl/gnlsource.h:
	Removed unused/useless code

	* gnl/gnlelements.c:
	bye bye

2005-10-27  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlobject.c: (translate_incoming_seek),
	(ghostpad_unlink_function), (gnl_object_ghost_pad),
	(gnl_object_ghost_pad_notarget), (gnl_object_ghost_pad_set_target):
	* gnl/gnlobject.h:
	Added two functions to be able to create GnlGhostPad without a target,
	and be able to set it later on.
	
2005-10-27  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlcomposition.c: (gnl_composition_class_init),
	(hash_value_destroy), (gnl_composition_init),
	(gnl_composition_dispose), (gnl_composition_finalize),
	(objects_start_compare), (objects_stop_compare),
	(update_start_stop_duration), (object_start_changed),
	(object_stop_changed), (object_priority_changed),
	(object_active_changed), (gnl_composition_add_object),
	(gnl_composition_remove_object):
	* gnl/gnlcomposition.h:
	Initial Cleanup
	Added new threadsafe way of handling objects

	* gnl/gnlobject.c: (gnl_object_base_init), (gnl_object_class_init),
	(gnl_object_init), (gnl_object_prepare_func), (gnl_object_prepare),
	(gnl_object_release_pad), (translate_incoming_seek),
	(translate_outgoing_newsegment), (update_values),
	(gnl_object_set_property), (gnl_object_get_property),
	(gnl_object_change_state):
	* gnl/gnlobject.h:
	stop position for object and media are now read-only
	Added read/write duration for object and media
	Saner event time modifications
	Added GstObjectFlags for GnlObject for figuring out if the object is a
	source or an operation
	Re-added prepare virtual method, still have to see if it's useful, I'd
	prefer to avoid using it...
	* gnl/gnlsource.c: (gnl_source_class_init), (gnl_source_init),
	(gnl_source_dispose), (gnl_source_finalize),
	(no_more_pads_in_child), (gnl_source_remove_element):
	* gnl/gnlsource.h:
	Cleanups and proper finalize

2005-10-25  Edward Hervey  <edward@fluendo.com>

	* gnl/gnlobject.c: (gnl_object_base_init), (gnl_object_class_init),
	(gnl_object_init), (gnl_object_to_media_time),
	(gnl_media_to_object_time), (gnl_object_covers_func),
	(gnl_object_covers), (gnl_object_release_pad),
	(translate_incoming_seek), (translate_outgoing_seek),
	(translate_outgoing_newsegment), (internalpad_event_function),
	(internalpad_query_function), (ghostpad_event_function),
	(ghostpad_query_function), (control_internal_pad),
	(ghostpad_link_function), (ghostpad_unlink_function),
	(gnl_object_ghost_pad), (gnl_object_set_caps),
	(gnl_object_set_property), (gnl_object_get_property):
	* gnl/gnlobject.h:
	* gnl/gnloperation.h:
	* gnl/gnlsource.c: (gnl_source_base_init), (gnl_source_class_init),
	(gnl_source_init), (compare_src_pad), (get_valid_src_pad),
	(no_more_pads_in_child), (gnl_source_add_element),
	(gnl_source_remove_element), (gnl_source_set_property),
	(gnl_source_get_property):
	* gnl/gnlsource.h:
	* test/Makefile.am:
	Object and Source are now useable and do proper time-shifting
	
2005-10-20  Edward Hervey  <edward@fluendo.com>

	Part II of non-linear world domination.

	* Makefile.am:
	* docs/Makefile.am:
	* gnl/Makefile.am:
	* gnl/gnl.c: (plugin_init):
	* gnl/gnl.h:
	* gnl/gnlcomposition.c: (gnl_composition_class_init),
	(gnl_composition_init):
	* gnl/gnlcomposition.h:
	* gnl/gnlobject.c: (gnl_object_base_init), (gnl_object_class_init),
	(gnl_object_init), (gnl_object_get_property):
	* gnl/gnlobject.h:
	* gnl/gnloperation.c: (gnl_operation_class_init),
	(gnl_operation_init):
	* gnl/gnloperation.h:
	* gnl/gnlsource.c: (gnl_source_class_init), (gnl_source_init),
	(gnl_source_set_element), (gnl_source_get_property):
	* gnl/gnlsource.h:
	* gnl/gnltimeline.c: (gnl_timeline_base_init),
	(gnl_timeline_class_init), (gnl_timeline_init):
	* gnl/gnltimeline.h:
	Plugin and ElementFactory are now 0.9 compatible and installable
	Commented out almost everything, gradually adding features

2005-10-20  Edward Hervey  <edward@fluendo.com>

	* .cvsignore:
	* Makefile.am:
	* autogen.sh:
	* configure.ac:
	* docs/Makefile.am:
	* m4/Makefile.am:
	* m4/codeset.m4:
	* m4/gettext.m4:
	* m4/glibc21.m4:
	* m4/iconv.m4:
	* m4/intdiv0.m4:
	* m4/inttypes-pri.m4:
	* m4/inttypes.m4:
	* m4/inttypes_h.m4:
	* m4/isc-posix.m4:
	* m4/lcmessage.m4:
	* m4/lib-ld.m4:
	* m4/lib-link.m4:
	* m4/lib-prefix.m4:
	* m4/progtest.m4:
	* m4/stdint_h.m4:
	* m4/uintmax_t.m4:
	* m4/ulonglong.m4:
	* makeconfigure:
	* po/Makefile.in.in:
	* po/Rules-quot:
	* po/boldquot.sed:
	* po/en@boldquot.header:
	* po/en@quot.header:
	* po/insert-header.sin:
	* po/quot.sed:
	* po/remove-potcdate.sin:
	* test/Makefile.am:
	Make gnonlin more gst-0.9 friendly

2005-07-14  Edward Hervey  <edward@fluendo.com>

	* Makefile.am: 
	* configure.ac:
	* gnonlin-config.1:
	* gnonlin-config.in:
	* gnonlin.spec.in: (Group): 
	* gnonlin.pc.in: (Cflags): 
	Updated to 0.9 dependency,
	removed gnonlin-config

2005-06-21  Edward Hervey  <edward@fluendo.com>

	* gnl/gnltimeline.c: (gnl_timeline_new): 
	* gnl/gnlcomposition.c: (gnl_composition_new): 
	* gnl/gnloperation.c: (gnl_operation_new): 
	* gnl/gnlsource.c: (gnl_source_new): 
	
	Removed buggy GST_INFO

2005-06-09  Thomas Vander Stichele  <thomas at apestaart dot org>

	* acconfig.h:
	* acinclude.m4:
	  remove
	* common/m4/as-compiler-flag.m4:
	* common/m4/as-compiler.m4:
	* common/m4/as-libtool.m4:
	* common/m4/as-scrub-include.m4:
	* common/m4/as-version.m4:
	* common/m4/ax_create_stdint_h.m4:
	  sync with upstream
	* configure.ac:
	* gnonlin-uninstalled.pc.in:
	  fix up in sync with the installed copy
	* gnonlin.pc.in:
	  typos

2005-06-09  Thomas Vander Stichele  <thomas at apestaart dot org>

	* docs/libs/Makefile.am:
	  comment out the DOC_OVERRIDES

2005-06-08  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnltimeline.c: (gnl_timeline_timer_loop):
	avoid outputting 2 EOS events if there's only one composition

2005-06-03  Edward Hervey  <bilboed@bilboed.com>

	* configure.ac:
	* Makefile.am:
	* common/Makefile.am:
	Forgot to add some files to the dist

2005-05-26  Edward Hervey  <bilboed@bilboed.com>

	* configure.ac:	Releasing 0.2.2

2005-05-26  Edward Hervey  <bilboed@bilboed.com>

	* Makefile.am: (EXTRA_DIST):
	added normal equivalent of .in files

2005-05-25  Christian Schaller  <cschalle@wildsrc.fluendo.lan>

	* gnl/gnltimeline.c:
	* gnl/gnlsource.c:
	* gnl/gnlcomposition.c:
	GCC4 fixes

2005-05-25  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnlsource.c:
	Handle case where the seek is delayed (using pending_seek)

	* docs/libs/gnonlin-sections.txt:
	* gnl/gnltimeline.h:
	* gnl/gnlsource.h:
	* gnl/gnloperation.h:
	* gnl/gnlcomposition.h:
	removed extern _details

	* configure.ac : Releasing 0.2.1

2005-05-25  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnlsource.c: (source_queue_media): 
	missing closing parenthisis
	removed unused 'filled' variable

2005-05-25  Wouter Paesen <wouter@kangaroot.net>

	Reviewed by : Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnlsource.c: (source_queue_media):
	memleak bugfix

2005-05-23  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnlsource.c:
	safer pre-rolling
	* gnl/gnltimeline.c:
	add query/event handling to timeline timer's pads
	fixed bug in request pad handling

2005-05-06  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnlsource.c:
	No more using global "gnonlin" debug category, using element specific categories

2005-05-06  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnltimeline.c:
	Added "src_%s" PadTemplate so _request_new_pad() works...
	
	* gnl/gnl.c: 
	* gnl/gnl.h:
	* gnl/gnlcomposition.c:
	* gnl/gnlobject.c:
	* gnl/gnloperation.c:
	* gnl/gnltimeline.c:
	No more using global "gnonlin" debug category, using element specific categories

	* docs/libs/tmpl/gnloperation.sgml: added "element" property documentation

	* docs/libs/gnonlin-sections.txt: removed GST_CAT_DEFAULT

2005-05-06  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnltimeline.c:
	Implemented GstElement->request_new_pad() in order to get a pad
	corresponding to a composition using standard API.
	Implement GstBin->add_element() in order to add a composition to the
	timeline using standard API.

	* gnl/gnloperation.c:
	GstElement of a GnlOperation can now be set/get using the "element" 
	property

2005-04-19  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnlcomposition.c: 
	gnl_composition_dispose was superfluous, now removed

2005-04-12  Edward Hervey  <bilboed@bilboed.com>

	* configure.ac: releasing 0.2.0 !!

2005-04-06  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnltimeline.c: (gnl_timeline_query):
	Prevent a segfault when querying position before anything is scheduled.
	Patch by Wouter Paesen.

	* gnl/gnlcomposition.c: (gnl_composition_schedule_operation): 
	Fixe scheduling when there's a gap between the operation's priority and
	the child object's priority. Patch by Wouter Paesen.

2005-04-06  Edward Hervey  <bilboed@bilboed.com>

	* gnonlin-config.in: 
	forgot to update it with new values

	* gnl/gnlsource.c: (source_getfunction):
	gcc-2.95.* compilation error

2005-04-04  Edward Hervey  <bilboed@bilboed.com>

	* test/sourcetest2.c:
	* test/pipelines.c: 
	updated to new api

	* test/Makefile.am: commenting out extra tests

	* gnl/gnlobject.c: (gnl_object_covers):	
	added gtk-doc comment

	* docs/libs/Makefile.am: corrections for distcheck

2005-03-31  Edward Hervey  <bilboed@bilboed.com>

	* docs/libs/tmpl/gnlcomposition.sgml: 
	* docs/libs/tmpl/gnlobject.sgml:
	Added documentation on GnlFindMethod, GnlCoverType and GnlDirection

2005-03-31  Edward Hervey  <bilboed@bilboed.com>

	* docs/random/design: 
	Updated explanatory documentation

2005-03-30  Edward Hervey  <bilboed@bilboed.com>

	* docs/libs/tmpl/gnlcomposition.sgml: 

2005-03-30  Edward Hervey  <bilboed@bilboed.com>

 	* gnl/gnl.h: 
	* gnl/gnlobject.h:
	* docs/libs/gnonlin-sections.txt:
	* docs/libs/tmpl/gnlobject.sgml:
	typo error in gnlobject.h,
	removed documentation for gnl_object_nearest_change()

2005-03-30  Edward Hervey  <bilboed@bilboed.com>

	* gnl/gnlobject.h:
	* gnl/gnlobject.c:
	Removed gnl_object_nearest_change() and cleanup of commented code

2005-03-30  Edward Hervey  <bilboed@bilboed.com>

	* gnl/Makefile.am:
	* gnl/gnl.h:
	* gnl/gnltypes.h:
	* gnl/gnlgroup.c:
	* gnl/gnlgroup.h:
	* gnl/gnltimeline.h:
	* gnl/gnltimeline.c:
	* gnl/gnlelements.c:
	* docs/libs/gnonlin-docs.sgml:
	* docs/libs/gnonlin-sections.txt:
	* docs/libs/gnonlin.types:
	* docs/libs/tmpl/gnltimeline.sgml:
	* docs/libs/tmpl/gnlgroup.sgml:
	Removing GnlGroup

	* docs/libs/gnonlin-docs.sgml:
	* docs/libs/gnonlin-sections.txt:
	* docs/libs/tmpl/gnlobject.sgml:
	* gnl/gnlobject.h:
	* gnl/gnlobject.c:
	Removing rate control property for GnlObject

2005-03-29  Edward Hervey  <bilboed@bilboed.com>

	* test/Makefile.am: 
	added EXTRA_DIST=pipelines.c and -I$(top_srcdir) to build flags

	* gnl/Makefile.am: (gnl_headers): forgot to add gnlobject.h

	* docs/libs/Makefile.am: (GTKDOC_CFLAGS): added -I$(top_srcdir) for build

	* Makefile.am: (EXTRA_DIST): removed gnonlin.m4

2005-03-24  Edward Hervey  <bilboed@bilboed.com>

	* docs/libs/tmpl/gnl.sgml:
	* docs/libs/tmpl/gnlcomposition.sgml:
	* docs/libs/tmpl/gnlgroup.sgml:
	* docs/libs/tmpl/gnlobject.sgml:
	* docs/libs/tmpl/gnloperation.sgml:
	* docs/libs/tmpl/gnlsource.sgml:
	* docs/libs/tmpl/gnltimeline.sgml:
	Added sgml file templates for documentation

	* docs/libs/gnonlin.types:
	* docs/libs/gnonlin-sections.txt:
	* docs/libs/gnonlin-docs.sgml:
	Added files for better hierarchy of documentation

	* configure.ac:
	* docs/Makefile.am:
	* docs/version.entities.in:
	* docs/libs/Makefile.am: 
	Added version.entities for documentation

	* docs/libs/Makefile.am: (GTKDOC_LIBS): added libgnl.la dependency

	* gnl/gnlsource.c: (source_getfunction): typo mistake

	* gnonlin.pc.in: more corrections from Wouter Paesen for correct
	dependency checks

	* configure.ac: (GST_PLUGIN_LDFLAGS), (GST_REQ): 
	sanity corrections from Wouter Paesen

2005-03-23  Edward Hervey  <bilboed@bilboed.com>

	* docs/Makefile.am: Make doc build depend on ./configure choice

	* gnl/gnl.c, gnl/gnlcomposition.c, gnl/gnlelements.c,
	gnl/gnlgroup.c, gnl/gnlgroup.h, gnl/gnlobject.c, gnl/gnlobject.h,
	gnl/gnloperation.c, gnl/gnloperation.h, gnl/gnlsource.c,
	gnl/gnlsource.h, gnl/gnltimeline.c, gnl/gnltimeline.h:
	Modifications so that elements are registered as gst-plugins

	* gnl/Makefile.am: (plugin_LTLIBRARIES): 
	use plugin_ instead of lib_ so that it's installed in the gst-plugins
	directory

	* Makefile.am: removed useless lines
	
	* gnl/gnlobject.c: (gnl_object_get_property):
	was setting an enum instead of an int

	* configure.ac: No spaces in value assignment !!

	* test/sourcetest1.c: modified datarate of fakesrc

	* gnl/gnl*.[ch]: correction for GST_DEBUG_* functions

	* gnonlin.pc.in: updated file to correct dependencies versions

2005-03-22  Edward Hervey  <bilboed@bilboed.com>

	* configure.ac, Makefile.am, docs/libs/Makefile.am, docs/Makefile.am: 
	Added gtk-doc API documentation skeleton

	* gnl/gnl*.[ch]: updated all class files for correct *.h dependency.

	* test/sourcetest1.c, test/sourcetest2.c, test/sourcetest3.c, test/sourcetest4.c :
	converted to new API

	* test/Makefile.am: deactivated most tests

